name: CI

env:
  OTP_VERSION: '27.1'
  ELIXIR_VERSION: '1.17.3'
  MIX_ENV: test
  COVERALLS_MINIMUM_COVERAGE: 90

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']
  workflow_dispatch:
    inputs:
      deploy_docs:
        description: 'Deploy docs (override branch restriction)'
        default: 'false'
        required: false

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: dashboard_ssd_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --tmpfs /var/lib/postgresql/data:rw

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup BEAM
        id: beam
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}

      - name: Cache Hex / Rebar
        uses: actions/cache@v4
        with:
          path: |
            ~/.hex
            ~/.cache/rebar3
          key: ${{ runner.os }}-hex-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ hashFiles('**/mix.lock') }}

      - name: Cache Mix deps
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-deps-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ hashFiles('**/mix.lock') }}

      - name: Cache PLTs
        uses: actions/cache@v4
        with:
          path: priv/plts
          key: ${{ runner.os }}-plts-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ hashFiles('**/mix.lock') }}

      - name: Install dependencies
        run: |
          mix deps.get
          MIX_ENV=dev mix deps.get

      - name: Security | Hex audit
        run: mix hex.audit

      - name: Security | deps audit
        run: MIX_ENV=dev mix deps.audit

      - name: Security | gitleaks
        run: ./scripts/secret_scan.sh

      - name: Security | Sobelow
        env:
          MIX_ENV: dev
          SOBELOW_CONFIDENCE: medium
        run: mix sobelow --exit

      - name: Quality | Format
        run: mix format --check-formatted

      - name: Quality | Credo
        run: mix credo --strict

      - name: Correctness | Compile (dev warnings)
        env:
          MIX_ENV: dev
        run: mix compile --force --warnings-as-errors

      - name: Correctness | Compile (test warnings)
        run: mix compile --force --warnings-as-errors

      - name: Infrastructure | Assets
        env:
          MIX_ENV: dev
        run: |
          mix assets.setup
          mix assets.build

      - name: Infrastructure | Docs
        env:
          MIX_ENV: dev
        run: mix docs

      - name: Infrastructure | Prepare DB
        run: |
          mix ecto.create
          mix ecto.migrate

      - name: Correctness | Tests w/ coverage
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mix coveralls.multiple --type local --type github

      - name: Correctness | Dialyzer PLT
        env:
          MIX_ENV: dev
        run: mix dialyzer --plt

      - name: Correctness | Dialyzer
        env:
          MIX_ENV: dev
        run: mix dialyzer --format short

      - name: Correctness | Doctor
        env:
          MIX_ENV: dev
        run: mix doctor --summary --raise

  docs-pages:
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_docs == 'true')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup BEAM
        uses: erlef/setup-beam@v1
        with:
          otp-version: ${{ env.OTP_VERSION }}
          elixir-version: ${{ env.ELIXIR_VERSION }}
      - name: Cache Mix deps
        uses: actions/cache@v4
        with:
          path: deps
          key: ${{ runner.os }}-deps-${{ env.ELIXIR_VERSION }}-${{ env.OTP_VERSION }}-${{ hashFiles('**/mix.lock') }}
      - name: Install dependencies
        env:
          MIX_ENV: dev
        run: mix deps.get
      - name: Build docs
        env:
          MIX_ENV: dev
        run: mix docs
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: doc

  deploy-pages:
    needs: docs-pages
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.deploy_docs == 'true')
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deploy.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deploy
        uses: actions/deploy-pages@v4
